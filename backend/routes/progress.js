const { Router } = require("express");
const progressRouter = Router();
const requireAuth = require("../middleware/requireAuth");
const progressModel = require("../models/progress");
const userModel = require("../models/user");
//identifying the user on the basis of _id generated by mongoDB
progressRouter.get("/user/:userId", async (req, res) => {
   try {
        const {userId} = req.params;
        const userProgress = await userModel.findById(userId);

        if(!userProgress){
            res.status(404).json({
                message: "User Not Found."
            })
    }   res.status(200).json(userProgress)
    } catch (error){
        res.status(500).json({
            message:"Server error", error
        });
    }
})

progressRouter.post("/dsa", requireAuth, async (req, res) => {
    try {const userId = req.userId;
    const date = Date.now();
    const type = 'DSA'
    const {hours, questions} = req.body;
    const progress = await progressModel.create({
        userId,
        date,
        type,
        hours,
        questions
    })

    res.status(201).json({
        message: "Progress Added", progress
    })
    } catch(error){
        res.status(500).json({
            message:"Something went wrong", error
        })
    }    
});

progressRouter.post("/development", requireAuth, async (req, res) => {
    
    try {const userId = req.userId;
    const date = Date.now();
    const type = 'development'
    const {hours, questions} = req.body;
    const progress = await progressModel.create({
        userId,
        date,
        type,
        hours
    })

    res.status(201).json({
        message: "Progress Added", progress
    })
    } catch(error){
        res.status(500).json({
            message:"Something went wrong", error
        })
    }

});

progressRouter.post("/github", requireAuth, async (req, res) => {
    try {const userId = req.userId;
    const date = Date.now();
    const type = 'github'
    const {hours, questions} = req.body;
    const progress = await progressModel.create({
        userId,
        date,
        type,
        hours
    })

    res.status(201).json({
        message: "Progress Added", progress
    })
    } catch(error){
        res.status(500).json({
            message:"Something went wrong", error
        })
    }


});

progressRouter.post("/competitiveProgramming", requireAuth, async (req, res) => {
    try{const userId = req.userId;
    const date = Date.now();
    const type = 'competitiveProgramming';
    const {hours, questions} = req.body;
    const progress = await progressModel.create({
        userId,
        date,
        type,
        hours,
        questions
    })
    res.status(201).json({
        message:"Your current Progresss", progress
    })
    } catch(error){
        res.status(500).json({
            message:"progress not found"
        })
    }
});

progressRouter.get("/type/:type", requireAuth, async (req, res) => {
    try{
        const {type} = req.params;
        const validTypes = ['DSA', 'development', 'competitiveProgramming', 'github']

        if(!validTypes.includes(type)){
            res.status(400).json({
                message:"Invalid progress type"
            })
        }

        const progress = await progressModel.find({userId: req.userId, type})
        res.status(200).json({
            message:"Your current progress"
        })
    } catch(error){
        res.status(500).json({
            message:"Progress not found", error
        })
    }
});


module.exports = {
    progressRouter: progressRouter
}